import { Client, GatewayIntentBits, REST, Routes, SlashCommandBuilder } from 'discord.js';
import { registerCommands } from './commands/registerCommands.js';
import { playChallenge } from './commands/lolChallenge.js';
import { startGameCommand } from './commands/startGame.js';
import 'dotenv/config';


const TOKEN = process.env.TOKEN;
const CLIENT_ID = process.env.CLIENT_ID;
const GUILD_ID = process.env.GUILD_ID;


// ‡∏™‡∏£‡πâ‡∏≤‡∏á Client
const client = new Client({ intents: [GatewayIntentBits.Guilds] });

// ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® Slash Commands
registerCommands(CLIENT_ID, GUILD_ID, TOKEN);

// ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏±‡∏ö Discord API
const rest = new REST({ version: '10' }).setToken(TOKEN);

// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
client.once('ready', () => {
  console.log(`ü§ñ Logged in as ${client.user.tag}`);
});

// ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö Slash Command
client.on('interactionCreate', async (interaction) => {
  if (!interaction.isChatInputCommand()) return;

  if (interaction.commandName === 'challenge') {
  await playChallenge(interaction);
  }

  if (interaction.commandName === 'startgame') {
    await startGameCommand(interaction);
  }

  if (interaction.commandName === 'hello') {
    await interaction.reply("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! ‡∏â‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠ ‡∏•‡∏∏‡∏á‡∏ï‡πã‡∏≠‡∏¢ ‡∏à‡∏∞‡∏°‡∏≤‡πÅ‡∏à‡∏Å‡πÄ‡∏õ‡∏≤‡∏∞‡πÄ‡∏õ‡∏µ‡πã‡∏¢‡∏∞‡∏ô‡∏∞ üëã");
  }
});

client.login(TOKEN);

